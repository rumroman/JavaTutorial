                                       Аннотации.

Аннотации создаются с помощью механизма основанного на интерфейсе. Аннотировать можно классы, методы, поля, параметры
и константы перечислимого типа. Когда применяется аннотация, ее членам приваиваются соответствющие значения. Когда
члену аннотации присваивается значение, используется только его имя.

                                    Правила удержания аннотаций.

Правила удержания определяют момент , когда аннотация отбрасывается . В Java определны три такие правила, инкапсулированные
в перечисление java.lang.annotation.RetentionPolicy. Это правила SOURCE, CLASS и RUNTIME.
   Аннотации по правилу удержания  SOURCE содержатся только в исходном файле и отбрасываются при компиляции.
   Аннотации по правилу удержания CLASS сохраняются в файле с раширением .class во время компиляции.Но они недоступны
для виртуальной машины JVM во время выполнения .
   Аннотации по правилу удержания RUNTIME созраняются в файле с расширением .class во время компиляции и остаются доступными
для виртуальной машины JVM во время выполнения.


Правило удержания аннотации задается с помощью одной из втсроенных аннотаций Java: @Retention, общая форма которой приведена

@Retention(правило_удержания)

Если для аннотацияя не указано никакого правила удержания, то применяется правило удержания CLASS.


                         Получение аннотаций во время выполнения с помощью рефлексии .

Если правило удержания RUNTIME , то могут быть опрошены во время выполнения в любой программе на Java с помощью рефлексии.
Рефлексия - это языковое средство для получения сведений о классе во время выполнения программы.
   Из объекта типа Class, Method, Field или Constructor можно получить конретные аннотации, связанные с этим объектом ,
вызвав метод getAnnotation().
<A extends Annotation> getAnnotation(Class<A> тип_аннотации)

